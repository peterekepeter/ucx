# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        cache: 'npm'

    - run: npm ci
    - run: npm run lint
    
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        cache: 'npm'

    - run: npm ci
    - run: npm run unittest -- --coverage
    - name: Upload unit test coverage artifact
      uses: actions/upload-artifact@v3
      with:
        name: unit-coverage
        path: ./src/lib/coverage

  build-cli-tool:
    name: Build CLI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        cache: 'npm'

    - run: npm ci
    - run: npm run esbuild-ucx
    - name: Upload cli-tool artifact
      uses: actions/upload-artifact@v3
      with:
        name: cli-tool
        path: ./out/ucx.js

  test-cli-tool:
    needs: [build-cli-tool]
    name: Parser Integration Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        utversion: [451b, 469b]
        include:
          # - utversion: 436
          #   zip: https://unrealarchive.org/unrealscript/ut99v436/Unreal_Tournament_v436.zip
          - utversion: 469b
            repo: https://github.com/Slipyx/UT99.git
            commit: 769bd788cb2c06077a26ff7c3e4fced521a2169e
          - utversion: 451b
            repo: https://github.com/Slipyx/UT99.git
            commit: a26a3359704873df5a24d0b241a32ca5fc36a8b7

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: cli-tool
      - run: ls
      - run: node ucx.js version
      - run: wget ${{ matrix.zip }} -O UT.zip && mkdir ut && cd ut && unzip ../UT.zip
        if: matrix.zip
      - run: git clone ${{ matrix.repo }} --no-checkout ut && cd ut && git checkout ${{ matrix.commit }}
        if: matrix.repo
      - run: node ucx.js lint ut --quiet

  build-vscode-extension:
    name: Build Extension
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        cache: 'npm'

    - run: npm ci
    - run: npm run pack
    - name: Upload vscode-extension artifact
      uses: actions/upload-artifact@v3
      with:
        name: vscode-extension
        path: ucx*.vsix

  sonar-coverage:
    needs: [unit-test]
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download unit test coverage artifact
      uses: actions/download-artifact@v3
      with:
        name: unit-coverage
        path: ./src/lib/coverage

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
  publish:
    if: github.ref == 'refs/heads/master'
    needs: [lint, unit-test, test-cli-tool, build-vscode-extension, sonar-coverage]
    name: Publish
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        cache: 'npm'
        
    - run: npm ci
    - run: npm run prepublish

    - uses: JS-DevTools/npm-publish@v3
      id: publish
      with:
        token: ${{ secrets.NPM_TOKEN }}

    - if: ${{ steps.publish.outputs.type }}
      run: npm run vscode:prepublish
    
    - if: ${{ steps.publish.outputs.type }}
      name: Publish to Open VSX Registry
      uses: HaaLeo/publish-vscode-extension@v1
      id: publishToOpenVSX
      with:
        pat: ${{ secrets.OPEN_VSX_TOKEN }}
    - if: ${{ steps.publish.outputs.type }}
      name: Publish to Visual Studio Marketplace
      uses: HaaLeo/publish-vscode-extension@v1
      with:
        pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
        registryUrl: https://marketplace.visualstudio.com
        extensionFile: ${{ steps.publishToOpenVSX.outputs.vsixPath }}
        