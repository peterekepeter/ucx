{
	"name": "ucx",
	"displayName": "ucx",
	"description": "UnrealScript Extensions",
	"version": "0.14.5",
	"repository": "https://github.com/peterekepeter/ucx",
	"publisher": "peterekepeter",
	"engines": {
		"vscode": "^1.75.0"
	},
	"bin": "./out/ucx.js",
	"categories": [
		"Programming Languages",
		"Linters",
		"Formatters"
	],
	"activationEvents": [],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "ucx.restartServer",
				"title": "ucx: Restart UnrealScript Language Server"
			}
		],
		"configuration": {
			"title": "UCX",
			"properties": {
				"ucx.libraryPath": {
					"title": "Path to UnrealScript library",
					"type": "string",
					"description": "All UnrealScript files from this path will be scanned and be used to provide definition and references in your project. This can be the folder where you exported all your scripts from the editor. Example: C:/Games/Ut99",
					"order": -180
				},
				"ucx.showErrors": {
					"title": "Report Errors",
					"type": "boolean",
					"default": true,
					"description": "Show problems that have 'error' level of severity. These are usually compiler errors that would prevent the project from working.",
					"order": -150
				},
				"ucx.showWarnings": {
					"title": "Report Warnings",
					"type": "boolean",
					"default": true,
					"description": "Show problems that have 'warning' level of severity. These are usually formatting and should be enabled to maintain code cleanliness.",
					"order": -149
				},
				"ucx.overrideEditorIndentationStyle": {
					"title": "Override Editor Indentation Style",
					"type": "boolean",
					"default": true,
					"description": "Ensures that VsCode uses the indentation style as its configured with the linter. Use ucx.linter.indentation.style to configure desired indentation style.",
					"order": -148
				},
				"ucx.linter.enabled": {
					"type": "boolean",
					"description": "Enable linter. These are additional checks that help detect problems early in development and help keep the codebase clean by enforcing formatting rules.",
					"default": true,
					"order": -99
				},
				"ucx.linter.indentation.enabled": {
					"type": "boolean",
					"markdownDescription": "Check and format code indetation. Use ucx.linter.indentation.style to configure desired indentation style.",
					"default": true,
					"order": -1
				},
				"ucx.linter.indentation.style": {
					"type": "string",
					"description": "Possible values: use \\t for tab and number 2, 4 for spaces. (default: \\t)",
					"default": "\\t",
					"order": -1
				},
				"ucx.linter.emptyLineBeforeFunction.enabled": {
					"type": "boolean",
					"description": "Check and format spacing requirements between function blocks.",
					"default": true
				},
				"ucx.linter.operatorSpacing.enabled": {
					"type": "boolean",
					"description": "Check and format for operations inside code expressions.",
					"default": true
				},
				"ucx.linter.semicolonFix.enabled": {
					"type": "boolean",
					"description": "Automatically add missing semicolons when formatting code. (experimental)",
					"default": false
				},
				"ucx.linter.classNamingRule.enabled": {
					"type": "boolean",
					"description": "Verify that classes have same name as the file.",
					"default": true
				},
				"ucx.linter.controlConditionSpacing.enabled": {
					"type": "boolean",
					"description": "Enable formatting rule for conditions in control structures.",
					"default": true
				},
				"ucx.linter.redundantDefaultValue.enabled": {
					"type": "boolean",
					"description": "Enable detection and removal of redundant default values.",
					"default": true
				},
				"ucx.linter.bracketSpacingRule.enabled": {
					"type": "boolean",
					"description": "Enable formatting rules for brackets {}",
					"default": true
				},
				"ucx.linter.validateStringRule.enabled": {
					"type": "boolean",
					"description": "Check for common errors inside string values",
					"default": true
				},
				"ucx.linter.validateNamesRule.enabled": {
					"type": "boolean",
					"description": "Check for usage errors inside names.",
					"default": true
				},
				"ucx.linter.keywordCasingRule.enabled": {
					"type": "boolean",
					"description": "Enforce formatting rules for keywords.",
					"default": true
				}
			}
		},
		"configurationDefaults": {
			"[unrealscript]": {
				"editor.semanticHighlighting.enabled": true
			}
		},
		"languages": [
			{
				"id": "unrealscript",
				"aliases": [
					"UnrealScript",
					"unrealscript"
				],
				"extensions": [
					".uc",
					".uci"
				],
				"firstLine": "^\\s*class\\s*[a-zA-Z0-9_]+\\s*(?:extends|expands)\\s*[a-zA-Z0-9_]+",
				"configuration": "./syntaxes/uc.language-configuration.json",
				"icon": {
					"dark": "./assets/uc-icon-dark.svg",
					"light": "./assets/uc-icon-light.svg"
				}
			},
			{
				"id": "ini",
				"extensions": [
					".ini",
					".int"
				],
				"icon": {
					"dark": "./assets/ini-icon-dark.svg",
					"light": "./assets/ini-icon-light.svg"
				}
			}
		],
		"grammars": [
			{
				"language": "unrealscript",
				"scopeName": "source.unrealscript",
				"path": "./syntaxes/uc.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "unrealscript",
				"path": "./syntaxes/uc.snippets.json"
			}
		]
	},
	"scripts": {
		"publish-all": "npm run npm-publish && npm run vsce-publish && npm run ovsx-publish",
		"vscode:prepublish": "rimraf ./out && npm run esbuild-base -- --minify",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"unittest": "jest",
		"unittest:watch": "jest --watch --runInBand",
		"pack": "npx vsce package",
		"vsce-publish": "npx vsce publish",
		"ovsx-publish": "bash -c ovsxpublish",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"esbuild-ucx": "esbuild ./src/ucx.ts --bundle --outfile=out/ucx.js --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"npm-publish": "npm run prepublish && npm publish",
		"prepublish": "rimraf ./out && npm run esbuild-ucx -- --minify"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/jest": "^27.4.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.75.0",
		"@typescript-eslint/eslint-plugin": "^5.1.0",
		"@typescript-eslint/parser": "^5.1.0",
		"@vscode/test-electron": "^1.6.2",
		"esbuild": "^0.14.54",
		"eslint": "^8.56.0",
		"glob": "^7.1.7",
		"jest": "^27.4.7",
		"mocha": "^9.1.3",
		"rimraf": "^5.0.5",
		"ts-jest": "^27.1.3",
		"typescript": "^4.4.4"
	}
}
